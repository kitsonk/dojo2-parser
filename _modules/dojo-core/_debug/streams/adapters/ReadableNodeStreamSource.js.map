{"version":3,"file":"ReadableNodeStreamSource.js","sourceRoot":"","sources":["streams/adapters/ReadableNodeStreamSource.ts"],"names":["ReadableNodeStreamSource","ReadableNodeStreamSource.constructor","ReadableNodeStreamSource._close","ReadableNodeStreamSource._handleClose","ReadableNodeStreamSource._handleError","ReadableNodeStreamSource._removeListeners","ReadableNodeStreamSource.cancel","ReadableNodeStreamSource.pull","ReadableNodeStreamSource.start"],"mappings":"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","sourcesContent":["import Promise from '../../Promise';\nimport { Source } from '../ReadableStream';\nimport ReadableStreamController from '../ReadableStreamController';\nimport { Readable } from 'stream';\n\nexport type NodeSourceType = Buffer | string;\nexport default class ReadableNodeStreamSource implements Source<NodeSourceType> {\n\tprotected _controller: ReadableStreamController<NodeSourceType>;\n\tprotected _isClosed: boolean;\n\tprotected _onClose: () => void;\n\tprotected _onData: (chunk: NodeSourceType) => void;\n\tprotected _onError: (error: Error) => void;\n\tprotected _nodeStream: Readable;\n\n\tconstructor(nodeStream: Readable) {;\n\t\tthis._isClosed = false;\n\t\tthis._nodeStream = nodeStream;\n\t}\n\n\t// Perform internal close logic\n\tprotected _close(): void {\n\t\tthis._isClosed = true;\n\t\tthis._removeListeners();\n\t\tthis._nodeStream.unpipe();\n\t}\n\n\t// Handle external request to close\n\tprotected _handleClose(): void {\n\t\tthis._close();\n\t\tthis._controller.close();\n\t}\n\n\tprotected _handleError(error: Error): void {\n\t\tthis._close();\n\t\tthis._controller.error(error);\n\t}\n\n\tprotected _removeListeners(): void {\n\t\tthis._nodeStream.removeListener('close', this._onClose);\n\t\tthis._nodeStream.removeListener('data', this._onData);\n\t\tthis._nodeStream.removeListener('end', this._onClose);\n\t\tthis._nodeStream.removeListener('error', this._onError);\n\t}\n\n\tcancel(reason?: any): Promise<void> {\n\t\tthis._handleClose();\n\n\t\treturn Promise.resolve();\n\t}\n\n\tpull(controller: ReadableStreamController<NodeSourceType>): Promise<void> {\n\t\tif (this._isClosed) {\n\t\t\treturn Promise.reject(new Error('Stream is closed'));\n\t\t}\n\n\t\tthis._nodeStream.pause();\n\n\t\tconst chunk = this._nodeStream.read();\n\n\t\tif (chunk) {\n\t\t\tcontroller.enqueue(chunk);\n\t\t}\n\n\t\tthis._nodeStream.resume();\n\n\t\treturn Promise.resolve();\n\t}\n\n\tstart(controller: ReadableStreamController<NodeSourceType>): Promise<void> {\n\t\tthis._controller = controller;\n\t\tthis._onClose = this._handleClose.bind(this);\n\t\tthis._onData = this._controller.enqueue.bind(this._controller);\n\t\tthis._onError = this._handleError.bind(this);\n\n\t\tthis._nodeStream.on('close', this._onClose);\n\t\tthis._nodeStream.on('data', this._onData);\n\t\tthis._nodeStream.on('end', this._onClose);\n\t\tthis._nodeStream.on('error', this._onError);\n\n\t\treturn Promise.resolve();\n\t}\n}\n"]}