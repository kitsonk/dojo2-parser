{"version":3,"file":"Scheduler.js","sourceRoot":"","sources":["Scheduler.ts"],"names":["getQueueHandle","Scheduler","Scheduler.constructor","Scheduler._defer","Scheduler._dispatch","Scheduler._schedule","Scheduler.schedule"],"mappings":"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","sourcesContent":["import { Handle } from './interfaces';\nimport { queueAnimationTask, QueueItem, queueMicroTask, queueTask } from './queue';\n\nconst typeMap: { [key: string]: (callback: (...args: any[]) => any) => Handle; } = {\n\tanimation: queueAnimationTask,\n\tmacro: queueTask,\n\tmicro: queueMicroTask\n};\n\nfunction getQueueHandle(item: QueueItem): Handle {\n\treturn {\n\t\tdestroy: function () {\n\t\t\tthis.destroy = function () {};\n\t\t\titem.isActive = false;\n\t\t\titem.callback = null;\n\t\t}\n\t};\n}\n\nexport interface KwArgs {\n\tdeferWhileProcessing?: boolean;\n\ttype?: string;\n}\n\nexport default class Scheduler {\n\tprotected _boundDispatch: () => void;\n\tprotected _deferred: QueueItem[];\n\tprotected _isProcessing: boolean;\n\tprotected _queue: QueueItem[];\n\tprotected _task: Handle;\n\n\t/**\n\t * Determines whether any callbacks registered during should be added to the current batch (`false`)\n\t * or deferred until the next batch (`true`, default).\n\t */\n\tdeferWhileProcessing: boolean;\n\n\t/**\n\t * Allows users to specify the type of task that should be scheduled.\n\t * Accepted values are 'macro' (default), 'micro', and 'animation'.\n\t */\n\ttype: string;\n\n\tprotected _defer(callback: (...args: any[]) => void): Handle {\n\t\tconst item: QueueItem = {\n\t\t\tisActive: true,\n\t\t\tcallback: callback\n\t\t};\n\n\t\tif (!this._deferred) {\n\t\t\tthis._deferred = [];\n\t\t}\n\n\t\tthis._deferred.push(item);\n\n\t\treturn getQueueHandle(item);\n\t}\n\n\tprotected _dispatch(): void {\n\t\tthis._isProcessing = true;\n\t\tthis._task.destroy();\n\t\tthis._task = null;\n\n\t\tconst queue = this._queue;\n\t\tlet item: QueueItem;\n\n\t\twhile (item = queue.shift()) {\n\t\t\tif (item.isActive) {\n\t\t\t\titem.callback();\n\t\t\t}\n\t\t}\n\n\t\tthis._isProcessing = false;\n\n\t\tlet deferred: QueueItem[] = this._deferred;\n\t\tif (deferred && deferred.length) {\n\t\t\tthis._deferred = null;\n\n\t\t\tlet item: QueueItem;\n\t\t\twhile (item = deferred.shift()) {\n\t\t\t\tthis._schedule(item);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _schedule(item: QueueItem): void {\n\t\tif (!this._task) {\n\t\t\tthis._task = typeMap[this.type](this._boundDispatch);\n\t\t}\n\n\t\tthis._queue.push(item);\n\t}\n\n\tconstructor(kwArgs?: Scheduler.KwArgs) {\n\t\tthis.deferWhileProcessing = (kwArgs && 'deferWhileProcessing' in kwArgs) ? kwArgs.deferWhileProcessing : true;\n\t\tthis.type = (kwArgs && kwArgs.type && kwArgs.type in typeMap) ? kwArgs.type : 'macro';\n\n\t\tthis._boundDispatch = this._dispatch.bind(this);\n\t\tthis._isProcessing = false;\n\t\tthis._queue = [];\n\t}\n\n\tschedule(callback: (...args: any[]) => void): Handle {\n\t\tif (this._isProcessing && this.deferWhileProcessing) {\n\t\t\treturn this._defer(callback);\n\t\t}\n\n\t\tconst item: QueueItem = {\n\t\t\tisActive: true,\n\t\t\tcallback: callback\n\t\t};\n\n\t\tthis._schedule(item);\n\n\t\treturn getQueueHandle(item);\n\t}\n}\n\nmodule Scheduler {\n\texport interface KwArgs {\n\t\tdeferWhileProcessing?: boolean;\n\t\ttype?: string;\n\t}\n}\n"]}